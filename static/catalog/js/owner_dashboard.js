//–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  document.addEventListener('DOMContentLoaded', function () {
    $(document).on('click', '[data-bs-target="#universalModal"]', function (e) {
      const url = $(this).data('url');
  
      $.get(url, function (data) {
        $('#modalBodyContent').html(data);
      });
    });
  
    $(document).on('submit', '#universalModal form', function (e) {
      e.preventDefault();
      const form = $(this);
      $.post(form.attr('action'), form.serialize(), function () {
        location.reload();
      }).fail(function (xhr) {
        $('#modalBodyContent').html(xhr.responseText);
      });
    });
  });

//–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω
$(document).on('click', '.toggle-edit-price', function () {
  const container = $(this).closest('[data-price-id]');
  const span = container.find('.price-text');
  const input = container.find('.price-input');
  const saveBtn = $(this);
  const cancelBtn = container.find('.cancel-edit-price');
  const priceId = container.data('price-id');

  if (input.hasClass('d-none')) {
    span.addClass('d-none');
    input.removeClass('d-none').focus().select();
    cancelBtn.removeClass('d-none');
    saveBtn.text('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å');
  } else {
    const newPrice = parseFloat(input.val());
    const errorBox = container.next('.price-error');

    if (isNaN(newPrice) || newPrice < 0 || newPrice > 9999999) {
      errorBox.text('–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 9 999 999 ‚Ç∏').fadeIn(200).delay(2000).fadeOut(400);
      input.addClass('is-invalid');
      setTimeout(() => input.removeClass('is-invalid'), 2000);
      return;
    }

    $.ajax({
      url: `/owner/price/${priceId}/update/`,
      method: 'POST',
      data: { price: newPrice },
      success: function () {
        span.text(cleanNumberDisplay(newPrice) + ' ‚Ç∏').removeClass('d-none');
        input.addClass('d-none');
        cancelBtn.addClass('d-none');
        saveBtn.text('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å');
      },
      error: function (xhr) {
        errorBox.text('–û—à–∏–±–∫–∞: ' + (xhr.responseJSON?.error || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è')).fadeIn(200).delay(2000).fadeOut(400);
      }
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∏—Ç—å"
$(document).on('click', '.cancel-edit-price', function () {
  const container = $(this).closest('[data-price-id]');
  const span = container.find('.price-text');
  const input = container.find('.price-input');
  const saveBtn = container.find('.toggle-edit-price');
  const cancelBtn = $(this);

  input.val(span.text().replace(' ‚Ç∏', ''));
  span.removeClass('d-none');
  input.addClass('d-none');
  cancelBtn.addClass('d-none');
  saveBtn.text('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å"
$(document).on('click', '.delete-price-btn', function () {
  const container = $(this).closest('[data-price-id]');
  const priceId = container.data('price-id');

  if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?")) {
    return;
  }

  $.ajax({
    url: `/owner/price/${priceId}/delete/`,
    method: 'POST',
    success: function () {
      container.closest('tr').fadeOut(300, function () {
        $(this).remove();
        
        const toastEl = document.getElementById('toast-deleted');
        if (toastEl) {
          const toast = new bootstrap.Toast(toastEl);
          toast.show();
        }
      });
    },
    error: function (xhr) {
      alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + (xhr.responseJSON?.error || xhr.status));
    }
  });
});

  
// –ó–∞–ø—Ä–µ—Ç –≤–≤–æ–¥–∞ –≤ —Ü–µ–Ω—ã –±—É–∫–≤ –∏ –ª–∏—à–Ω–µ–≥–æ
$(document).on('keypress', '.price-input', function (e) {
  const char = String.fromCharCode(e.which);
  const allowedChars = '0123456789.';
  const value = $(this).val()
    if (!allowedChars.includes(char)) {
      e.preventDefault();
  }
    if (char === '.' && value.includes('.')) {
      e.preventDefault();
  }
})

// –¢–æ–ª—å–∫–æ —Ü–µ–Ω—ã —Ñ–æ—Ä–º–∞—Ç–∞ 0.00
$(document).on('input', '.price-input', function () {
  const val = $(this).val();
  const parts = val.split('.');
  if (parts.length === 2 && parts[1].length > 2) {
    $(this).val(parts[0] + '.' + parts[1].slice(0, 2));
  }
})

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞
  if (window.storeNeeded === true) {
  $.ajax({
    url: "/owner/modal/store-select/",
    method: "GET",
    headers: { "X-Requested-With": "XMLHttpRequest" },
    success: function (response) {
      if (response.html) {
        // üëâ –£–¥–∞–ª–∏–º —Å—Ç–∞—Ä—É—é –º–æ–¥–∞–ª–∫—É, –µ—Å–ª–∏ –±—ã–ª–∞
        const oldModal = document.getElementById('storeSelectModal');
        if (oldModal) oldModal.remove();

        // üëâ –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ body
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = response.html;
        document.body.appendChild(tempDiv);

        // üëâ –ñ–¥—ë–º –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
        setTimeout(() => {
          const modalElement = document.getElementById('storeSelectModal');
          if (modalElement) {
            const modal = new bootstrap.Modal(modalElement);
            modal.show();

            // –ù–∞–≤–µ—Å–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
            $('#storeSelectForm').on('submit', function (e) {
              e.preventDefault();
              const storeId = $(this).find('select').val();
              if (storeId) {
                window.location.href = `${window.location.pathname}?store=${storeId}`;
              }
            });
          } else {
            console.error("–ú–æ–¥–∞–ª–∫–∞ storeSelectModal –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM.");
          }
        }, 100);
      }
    },
    error: function () {
      console.error("–û—à–∏–±–∫–∞ AJAX –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–æ–¥–∞–ª–∫–∏.");
    }
  });
}

// –§–∏–ª—å—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤
$('#filter-form').on('submit', function (e) {
  e.preventDefault();

  const $form = $(this);
  const query = $form.serialize();

  $.ajax({
    url: window.location.pathname + '?' + query,
    method: 'GET',
    headers: { 'X-Requested-With': 'XMLHttpRequest' },
    success: function (response) {
      if (response.html) {
        $('#price-table-body').html(response.html);
      }
    },
    error: function () {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.");
    }
  });
});

// –î–∏–Ω–∞–º–∏—á–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤
function updateProductTable() {
  const $form = $('#filter-form');
  const query = $form.serialize();

  $('#price-table-body').addClass('loading');

  $.ajax({
    url: window.location.pathname + '?' + query,
    method: 'GET',
    headers: { 'X-Requested-With': 'XMLHttpRequest' },
    success: function (response) {
      if (response.html) {
        $('#price-table-body').html(response.html);
      }
    },
    complete: function () {
      $('#price-table-body').removeClass('loading');
    },
    error: function () {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.");
    }
  });
}

let filterTimeout = null;
$('#filter-form input[name="q"]').on('input', function () {
  clearTimeout(filterTimeout);
  filterTimeout = setTimeout(updateProductTable, 400); // —á–µ—Ä–µ–∑ 400 –º—Å
});

$('#filter-form select').on('change', function () {
  updateProductTable();
});

$('#reset-filters').on('click', function () {
  const $form = $('#filter-form');
  $form[0].reset(); // —Å–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏–π
  updateProductTable();
});
